---
name: Build & Publish

on:
  push:
    branches:
      - main
  schedule:
    # Run weekly
    - cron: '0 0 * * 0'

jobs:
  image:
    name: Build image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      actions: read
      id-token: write
      attestations: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME_BASE: ${{ github.repository }}
    strategy:
      matrix:
        toolbox:
          - dev
          - sre
          - node-dev
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up QEMU for cross-platform builds
        uses: docker/setup-qemu-action@4574d27a4764455b42196d70a065bc6853246a25 # v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3

      - name: Login to GHCR
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set container metadata
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5
        id: docker-metadata
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BASE }}/${{ matrix.toolbox }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.description="Container image with JAORMX's toolboxes"
            org.opencontainers.image.title="Toolbox container image"
            org.opencontainers.image.version=${{ github.sha }}
          flavor: |
            latest=true

      - name: Build and Push Image
        id: image-build
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # v6
        with:
          context: .
          file: ./${{ matrix.toolbox }}/Dockerfile
          platforms: linux/amd64
          push: true
          provenance: mode=max
          sbom: true
          tags: ${{ steps.docker-metadata.outputs.tags }}
          labels: ${{ steps.docker-metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Capture Image Digest
        id: image-digest
        run: |
          echo "digest=$(docker inspect --format='{{index .RepoDigests 0}}' ghcr.io/${{ env.IMAGE_NAME_BASE }}${{ matrix.toolbox }}:${{ steps.version-string.outputs.tag }})" >> "$GITHUB_OUTPUT"

      - name: Install cosign
        uses: sigstore/cosign-installer@c56c2d3e59e4281cc41dea2217323ba5694b171e # v3.8.0

      - name: Sign the images with GitHub OIDC Token
        env:
          DIGEST: ${{ steps.image-build.outputs.digest }}
          TAGS: ${{ steps.docker-metadata.outputs.tags }}
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes ${images}
